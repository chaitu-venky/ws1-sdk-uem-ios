{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"apis/ws1-sdk-uem-ios/","title":"Index","text":""},{"location":"apis/ws1-sdk-uem-ios/#title-workspace-one-sdk-for-ios","title":"title: Workspace ONE SDK for iOS","text":""},{"location":"apis/ws1-sdk-uem-ios/#summary","title":"summary:","text":""},{"location":"apis/ws1-sdk-uem-ios/#authors","title":"authors:","text":"<pre><code>- \n-\n</code></pre> <p>date: 2024-05-27</p>"},{"location":"apis/ws1-sdk-uem-ios/#hide","title":"hide:","text":""},{"location":"apis/ws1-sdk-uem-ios/#-navigation","title":"- navigation","text":""},{"location":"apis/ws1-sdk-uem-ios/#-toc","title":"- toc","text":""},{"location":"apis/ws1-sdk-uem-ios/#workspace-one-sdk-for-ios","title":"Workspace ONE SDK for iOS","text":"<p>The Workspace ONE SDK (formerly known as AirWatch SDK) code library for Apple iOS devices can be used to enable additional app config and security capabilities that may not yet be available natively as part of the AppConfig Community. Certain use cases such as granular analytics can be provided through a deeper integration with the SDK. The Workspace ONE SDK for iOS is also a good choice in deployment scenarios where a MDM profile installation on the device is not possible.</p>"},{"location":"apis/ws1-sdk-uem-ios/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p>"},{"location":"apis/ws1-sdk-uem-ios/#documentation-and-reference","title":"Documentation and Reference","text":"Name Version Size MD5 Workspace ONE SDK for iOS Native Download Name Size Development Guides VMware Workspace ONE for iOS and iPadOS Base Integration Guide 3.1 MB VMware Workspace ONE for iOS and iPadOS Integration Preparation Guide 1.7 MB VMware Workspace ONE Inactivity Wipe Technical Feature Guide 549.8 KB VMware Workspace ONE SDK for iOS (Swift) Developer Guide - latest 2.7 MB VMware Workspace ONE SDK Identity Certificate Export Technical Feature Guide 259.9 KB VMware Workspace ONE SDK URL Scheme Replacement Technical Feature Guide 483.4 KB VMware Workspace ONE Shared Device Support Technical Feature Guide 349.0 KB Workspace ONE SDK for iOS (Objective-C) Developer Guide General Mobile Application Management Technical White Paper 1.2 MB Require Device Passcode Technical Feature Guide 449.4 KB"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/","title":"VMware Workspace ONE SDK for iOS (Objective-C)","text":"<p>The VMware Workspace ONE\u00ae SDK is a set of tools allowing organizations to incorporate a host of features and functionality into their custom-built iOS applications. The Workspace ONE SDK enhances the security and functionality of those applications and in turn helps save application development time and money.</p> <p>This content is no longer maintained. Checkout updated Workspace ONE SDK developer documentation on code.vmware.com.</p> <p>Integrating an application with the Workspace ONE SDK can be broken down into five main steps. A high-level overview of each step is listed below.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/#enable-the-core-sdk-framework-within-xcode","title":"Enable the Core SDK Framework within Xcode","text":"<p>These steps detail the core iOS frameworks and the Workspace ONE SDK frameworks that you add to your project in order for the SDK to function properly. The Workspace ONE SDK frameworks are made available by running the provided AirWatchSDK.dmg file.</p> <p>In order for your custom application to use the SDK, you must first complete the following setup procedures in Xcode:</p> <ul> <li>Add Required Frameworks</li> <li>Configure the Server Connections</li> </ul> <p>The following modules enable the device management framework and allow you to configure device management features into your application: * Implement the Beacon * Implement the DataSampler</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/#select-and-implement-additional-sdk-modules","title":"Select and Implement Additional SDK Modules","text":"<p>Workspace ONE UEM provides a number of pre-configured functions for your app that can be controlled from the Workspace ONE UEM console. These modules make up the Application Management Framework. You must decide which SDK modules to use within your application.</p> <ul> <li>Developing Modules Developers have the option, for most modules, to code the expected behavior or to set the behavior in the Workspace ONE UEM console. If you want the application to behave a certain way every time, you must code this behavior in to the application.</li> <li>Coding the Logging Level The exception is Logging. You must code the logging level and you must set this option in the Workspace ONE UEM console. This configuration ensures that your network is not burdened with unwanted logging activity.</li> <li>Using Default Settings for SDK Profiles Use the SecurityPolicies and Settings pages to configure settings once and then share them across Workspace ONE UEM applications using the iOS Default Settings @ [Organization Group] profile.</li> </ul> <p>You can also use the Profiles page to configure custom settings with specific behaviors.</p> <p>Implementing each module into your app is a two-step process: 1. Implement the functionality for the desired module within your app (in Xcode). 2. Add the corresponding configuration to the SDK Profile (in the Workspace ONE UEM console) that gets assigned to the app.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/#using-certificates","title":"Using Certificates","text":"<p>The Workspace ONE SDK allows you to provision and embed certificates into your app upon deployment. The process involves three main steps: * Configuring the certificate authority (CA) and the CA Template. * Creating the App Profile in the Workspace ONE UEM console. * Assigning the App Profile to the application in Workspace ONE UEM prior to app deployment. See Certificate Provisioning.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/#set-default-settings-within-workspace-one-uem","title":"Set Default Settings within Workspace ONE UEM","text":"<p>In the Workspace ONE UEM console, you must configure default SDK settings to assign it to your app. These settings include configurations specific to each module you plan on utilizing.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/#upload-the-application-to-workspace-one-uem","title":"Upload the Application to Workspace ONE UEM","text":"<p>Once your app is completely built, you need to upload the file into Workspace ONE UEM using the Workspace ONE UEM console. During this process, you need to assign the SDK profile you created, making the settings defined in the SDK profile available to your application. The Mobile Application Management (MAM) Guide describes how to upload an application.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/#deploy-the-application","title":"Deploy the Application","text":"<p>The final step is to deploy your application to managed devices through the Workspace ONE UEM console. Users now have access to the application, along with all the SDK enabled features you've implemented.</p> <p>For more information on deploying applications to managed devices, see the Mobile Application Management (MAM) Guide. * Migrate to the Latest SDK Version   In the latest SDK for iOS, we have updated various UI screens presented by the SDK. These pages now incorporate storyboards that require you to import the new AWKit.bundle included in the new SDK DMG. This AWKit.bundle contains the compiled storyboards required for the app to function. * Supported Operating Systems and Requirements for the Workspace ONE SDK for iOS (Objective-C)   The Workspace ONE SDK for iOS (Objective-C) is compatible with the listed operating systems and requires the listed components. * Security Considerations for OpenURL in iOS   With changes to OpenURL in iOS 13, update to the latest version of the Workspace ONE SDK for iOS (Objective-C) to mitigate possible security issues.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/","title":"01 Migrate","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/#title-workspace-one-sdk-for-ios","title":"title: Workspace ONE SDK for iOS","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/#summary","title":"summary:","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/#authors","title":"authors:","text":"<pre><code>- \n-\n</code></pre> <p>date: 2024-05-27</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/#hide","title":"hide:","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/#-navigation","title":"- navigation","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/#-toc","title":"- toc","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/#migrate-to-the-latest-sdk-version","title":"Migrate to the Latest SDK Version","text":"<p>In the latest SDK for iOS, we have updated various UI screens presented by the SDK. These pages now incorporate storyboards that require you to import the new AWKit.bundle included in the new SDK DMG. This AWKit.bundle contains the compiled storyboards required for the app to function.</p> <p>We have also integrated with the latest Safari View Controller for various process flows on UI screens. Add SafariServices.Framework so all Workspace ONE UEM screens work without error.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/01-Migrate/#procedure","title":"Procedure","text":"<ol> <li>Replace or import the AWKit.bundle.</li> <li>Replace the older version of AWKit.bundle with the newer version provided in the DMG file if you already import AWKit.bundle into your project bundle resources today.</li> <li>Import AWKit.bundle into your project under Bundle Resources in Xcode Build Phases if you have never imported the AWKit.bundle into your project.</li> <li>Import the SafariServices.Framework into your project.</li> </ol>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/","title":"02 Supported OS and Requirements","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#title-workspace-one-sdk-for-ios","title":"title: Workspace ONE SDK for iOS","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#summary","title":"summary:","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#authors","title":"authors:","text":"<pre><code>- \n-\n</code></pre> <p>date: 2024-05-27</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#hide","title":"hide:","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#-navigation","title":"- navigation","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#-toc","title":"- toc","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#supported-operating-systems-and-requirements-for-the-workspace-one-sdk-for-ios-objective-c","title":"Supported Operating Systems and Requirements for the Workspace ONE SDK for iOS (Objective-C)","text":"<p>The Workspace ONE SDK for iOS (Objective-C) is compatible with the listed operating systems and requires the listed components.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#supported-ios-operating-systems","title":"Supported iOS Operating Systems","text":"<p>The Workspace ONE SDK for iOS (Objective-C) supports the use of the Apple operating systems iOS 9.0 or later. Certain features require a newer operating system and these features are noted.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/02-Supported-OS-and-Requirements/#requirements","title":"Requirements","text":"<p>Meet the following requirements before using the Workspace ONE SDK for iOS (Objective-C): * To manage organization groups, get access to the Workspace ONE UEM console v9.5 or later with the appropriate access rights. * Know application development using Xcode (for more information, see https://developer.apple.com/xcode/) and use Xcode v6.0.1+. * To develop the application, get the necessary SDK DMG (AirWatch SDK.dmg) file from Workspace ONE UEM.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/","title":"03 Security Considerations","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#title-workspace-one-sdk-for-ios","title":"title: Workspace ONE SDK for iOS","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#summary","title":"summary:","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#authors","title":"authors:","text":"<pre><code>- \n-\n</code></pre> <p>date: 2024-05-27</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#hide","title":"hide:","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#-navigation","title":"- navigation","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#-toc","title":"- toc","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#security-considerations-for-openurl-in-ios","title":"Security Considerations for OpenURL in iOS","text":"<p>With changes to OpenURL in iOS 13, update to the latest version of the Workspace ONE SDK for iOS (Objective-C) to mitigate possible security issues.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#actions","title":"Actions","text":"<p>If you build apps with the Workspace ONE SDK for iOS (Objective-C) and deploy them to devices that are enrolled with the Workspace ONE Intelligent Hub, consider updating to the latest versions of the Workspace ONE Intelligent Hub for iOS and the Workspace ONE SDK for iOS (Objective-C).</p> <p>You can add the key RestrictCredentialsExchangeWithThirdPartyApplications to the default SDK setting profile assigned to the Workspace ONE Intelligent Hub. If the attack scenarios mentioned in Security Considerations might impact your use cases, consider adding the key. Adding the key affects the user experience of SDK applications. Users must authenticate when they first start every Objective-C SDK app after installation, even if single sign-on is enabled.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#openurl-changes","title":"OpenURL Changes","text":"<p>iOS 13 includes a change involving parameters returned during the OpenURL process between applications from different developer accounts. This change directly affects the communication mechanism between the Workspace ONE SDK and Workspace ONE Intelligent Hub or the Workspace ONE Legacy application.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#security-considerations","title":"Security Considerations","text":"<p>Workspace ONE SDK for iOS (Objective-C) has a workflow where the Workspace ONE SDK retrieved an authentication token with user credentials from Workspace ONE Intelligent Hub using the iOS OpenURL mechanism for single sign-on purposes. Before the Workspace ONE Intelligent Hub app returned the credentials back to the requesting SDK, Workspace ONE Intelligent Hub validated the bundle identifier of the requesting SDK-integrated app to ensure it was legitimate. By combining this Workspace ONE Intelligent Hub validation mechanism with MDM device restrictions to prevent devices from trusting unmanaged enterprise apps, users were protected against malicious applications pretending to be SDK-integrated apps.</p> <p>iOS 13 no longer provides the bundle identifier of the requesting SDK-integrated app to the Workspace ONE Intelligent Hub (older OS versions still provide the bundle identifier). Not having the bundle identifier restricts the Workspace ONE Intelligent Hub from performing the validation. The lack of this validation creates an avenue for malicious applications to mask themselves as the Workspace ONE SDK for iOS (Objective-C).</p> <p>For example, if an opportunistic attacker makes an iOS user install a malicious app from the App Store, and if the malicious app knows the Workspace ONE SDK's OpenURL protocol, the app can appear legitimate. The malicious app can retrieve the user's login credentials from the Workspace ONE Intelligent Hub app.</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/03-Security-Considerations/#security-mitigations","title":"Security Mitigations","text":"<p>To mitigate possible problems, perform one of the listed actions. * Consider updating your Workspace ONE SDK for iOS (Objective-C) apps to use the Workspace ONE SDK for iOS (Swift). The Workspace ONE SDK for iOS (Swift) does not use the OpenURL mechanism for single sign-on purposes. Instead, the first Workspace ONE SDK for iOS (Swift) app installed on the device requires the user to log in. Subsequent SDK-integrated apps that share the keychain login, do not need manual login after the first app.</p> <ul> <li> <p>If the device is MDM enrolled, disable the menu item in the MDM profile restriction for Allow user to trust unmanaged enterprise apps. Disabling this menu item prevents malicious spoofed applications from being installed and from running on the device.</p> </li> <li> <p>If the device is MDM enrolled and supervised, disable the menu item in the MDM profile restriction for Allow installing public apps. Disabling this menu item prevents malicious public apps that are not permitted by the administrator from being installed on the device.</p> </li> <li> <p>You can add a key, <code>RestrictCredentialsExchangeWithThirdPartyApplications</code>, to the custom settings payload in the default SDK settings profile assigned to the Workspace ONE Intelligent Hub for iOS. Set the value to <code>true</code>. If you do add the key, it can lead to usability degradation, so add it if you see the mentioned security gap as a serious threat. This key sets the Workspace ONE Intelligent Hub to not return the credentials to any requesting SDK-integrated app. This key also sets Workspace ONE SDK for iOS (Objective-C) apps to no longer share the integrated authentication certificate credentials. Each Workspace ONE SDK for iOS (Objective-C) app refetches its own integrated authentication credentials separately. Important: You must format the custom settings payload correctly. You can add keys within the brackets, but do not add any strings outside of the brackets. <pre><code>{\n\"RestrictCredentialsExchangeWithThirdPartyApplications\": true\n}\n</code></pre></p> </li> </ul>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/04-Getting-Started/","title":"04 Getting Started","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/04-Getting-Started/#title-workspace-one-sdk-for-ios","title":"title: Workspace ONE SDK for iOS","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/04-Getting-Started/#summary","title":"summary:","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/04-Getting-Started/#authors","title":"authors:","text":"<pre><code>- \n-\n</code></pre> <p>date: 2024-05-27</p>"},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/04-Getting-Started/#hide","title":"hide:","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/04-Getting-Started/#-navigation","title":"- navigation","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/04-Getting-Started/#-toc","title":"- toc","text":""},{"location":"apis/ws1-sdk-uem-ios/developer/Objective-C/04-Getting-Started/#getting-started","title":"Getting Started","text":"<p>Perform the following tasks to prepare to use the VMware Workspace ONE SDK for iOS (Objective-C).</p> <p>[] Add Frameworks in Xcode The SDK depends on the following frameworks to function properly. Follow the steps to add the necessary frameworks to your project. [] Adding the Required Xcode Bundle Resources The SDK depends on the following bundle resources to function properly, so add the necessary bundles to your project. [] Add the Workspace ONE SDK Frameworks The Workspace ONE SDK frameworks are made available by running the provided AirWatch SDK.dmg file. [] Using Valid Architectures [] Register Callback Scheme To receive a callback from the Workspace ONE Intelligent Hub, the application exposes a custom scheme in the info.plist. [] Miscellaneous Entries for the Info.PLIST File [] Compile With Xcode 7 If you use Xcode 7 to compile your SDK application, take these steps to ensure that the application functions properly. [] Initialize the SDK Before you can use the SDK, you must initialize it. The AWController class is the main component responsible for initializing the SDK. [] SDK and Application Profiles The SDK associates with two types of Workspace ONE UEM profiles. These two types are SDK Profiles and application profiles. You assign both types of profiles to the application from the Workspace ONE UEM console. [] Implementing the Beacon You can set up the Beacon to send device information to the Workspace ONE UEM console by specifying a time interval. Generic device information such as the device name, OS version, and compromised status is sampled. In addition, the Beacon module is used to start location services by specifying a location mode. [] Implementing MDM Status The MDM Status module allows an application to check certain properties and the status of some MDM properties for the device that the application lives in.</p>"}]}